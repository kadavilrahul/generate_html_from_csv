<script>
    const API_URL = '<%= config.api.url %>';
    const CREDENTIALS = btoa('<%= config.api.consumer_key %>:<%= config.api.consumer_secret %>');

    let createdProductId = null;

    function showSpinner() {
        document.querySelector('.loading-spinner').style.display = 'block';
    }

    function hideSpinner() {
        document.querySelector('.loading-spinner').style.display = 'none';
    }

    function showMessage(type, message) {
        const element = document.getElementById(`${type}Message`);
        element.textContent = message;
        element.style.display = 'block';
        setTimeout(() => {
            element.style.display = 'none';
        }, 3000);
    }

    async function createProduct() {
        const productData = {
            name: document.querySelector('h1').innerText,
            type: 'simple',
            regular_price: document.querySelector('.price-display').innerText.replace('â‚¹', '').replace(/[^\d]/g, ''),
            description: document.querySelector('.description').innerText,
            short_description: document.querySelector('.product-short-description').innerText,
            categories: [{
                name: document.querySelector('.category-badge').innerText
            }],
            images: [{
                src: document.getElementById('mainImage').src
            }]
        };

        const response = await fetch(`${API_URL}/products`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Basic ${CREDENTIALS}`
            },
            body: JSON.stringify(productData)
        });

        if (!response.ok) throw new Error('Failed to create product');

        const data = await response.json();
        return data.id;
    }

    // Handle initial order form submission
    document.getElementById('orderForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        showSpinner();

        try {
            createdProductId = await createProduct();
            showMessage('success', 'Product added to cart successfully!');

            // Redirect to WooCommerce cart with the product added
            const quantity = document.querySelector('input[name="quantity"]').value;
            const cartUrl = `<%= config.cart.url %>?add-to-cart=${createdProductId}&quantity=${quantity}`;
            window.location.href = cartUrl;
        } catch (error) {
            console.error('Error:', error);
            showMessage('error', 'Failed to create product');
        } finally {
            hideSpinner();
        }
    });

    // Description toggle functionality
    document.addEventListener("DOMContentLoaded", function () {
        const toggle = document.querySelector(".description-toggle");
        const details = document.querySelector(".Description-details");
        const arrow = document.querySelector(".arrow");

        if (toggle && details && arrow) {
            toggle.addEventListener("click", () => {
                const isCollapsed = details.classList.contains("collapsed");
                if (isCollapsed) {
                    details.classList.remove("collapsed");
                    details.style.maxHeight = details.scrollHeight + "px";
                    details.style.opacity = "1";
                } else {
                    details.classList.add("collapsed");
                    details.style.maxHeight = "0";
                    details.style.opacity = "0";
                }

                arrow.classList.toggle("open");
            });
        }
    });

    // Number input functionality
    function changeValue(delta) {
        const input = document.getElementById('number');
        const min = parseInt(input.min) || -Infinity;
        const max = parseInt(input.max) || Infinity;
        const currentValue = parseInt(input.value) || 0;

        let newValue = currentValue + delta;
        if (newValue >= min && newValue <= max) {
            input.value = newValue;
        }
    }

    // Thumbnail functionality
    document.addEventListener("DOMContentLoaded", function () {
        const thumbnails = document.querySelectorAll('#thumbnailSlider img');
        const mainImage = document.getElementById('mainImage');

        if (thumbnails.length > 0 && mainImage) {
            thumbnails.forEach(thumbnail => {
                thumbnail.addEventListener('mouseenter', function() {
                    mainImage.src = this.src;
                    thumbnails.forEach(img => img.classList.remove('active'));
                    this.classList.add('active');
                });
            });
        }
    });

    // Mobile navigation toggle
    function toggleNavbar() {
        const navbarContent = document.getElementById('navbarContent');
        if (navbarContent) {
            navbarContent.classList.remove('show');
        }
    }
</script>